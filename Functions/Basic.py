'''
Created on 18 июн. 2020 г.

@author: Alex
'''

def f(p: int, n: str, v: 'default', *s: tuple, **d: {'d1': 1, 'd2': 2})->bool:
    ''' Строка документации '''
    return True
f.attr = "Атрибут"
print("Атрибут: " + f.attr)

for p in dir(f):
    s = "print('" + p + ":', f." + p + ")"
#    print(s)
    exec(s)

''' lamda-функции практически не отличаются от обычных '''
l = (lambda p, n, v='default', *s, **d: str((p, n*v, str(s), str(d))))

print(dir(l))
print(l.__name__)
print(l.__class__)

'''Однако неверная передача именованных совместно с позиционными аргументами
приводит к неожиданным результатам (по крайней мере, в eclipse):
Программа ничего не делает, но нет даже сообщения об ошибке(!!!) '''
print(l(0, 2))          # Так можно
print(l(0, n=2))        # Так тоже
print(l(0, n=2, v=3))   # И даже так
#print(l(0, n=2, 3))    # А так уже нет!!! Попробуйте раскомментировать!!!

print("Классический вызов: " + l(0, 1, 2, 3, 4, d1=11, d2=22))
